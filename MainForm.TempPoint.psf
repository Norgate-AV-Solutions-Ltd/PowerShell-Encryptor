<File version="2.1">
  <FileID>768b3973-2023-409e-808e-2056763a4fe1</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAAHYcAAB2HAY/l8WUAAGlfSURBVHhe7b1ndFTpfuY7X+66H2bdNXfW3PHY
47GPfWwf+8Rudw7QdJNzFiIjcpbIiJxzEjk0OYMkQAiEQGSUQQihCMo5h8pReu777lKBGjZ9gC5J
Rdfz6/VrtnbtVPutqv+z838hhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCPk5Fv32n/85ZMWqNSHbd+wN2Rqwi1JKKaUfoLv2HgiZPHlKyP/9f/9fIY01
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
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCiKfyX/7L/w+v7pGkUAZvcQAAAABJ
RU5ErkJggg==</Preview>
  <Object type="System.Windows.Forms.Form, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="formEncryptor" children="Controls">
    <Property name="AutoScaleDimensions">13, 26</Property>
    <Property name="AutoScaleMode">Font</Property>
    <Property name="ClientSize">1263, 550</Property>
    <Property name="FormBorderStyle">FixedDialog</Property>
    <Property name="MainMenuStrip">
      <Reference name="menustrip1" />
    </Property>
    <Property name="Margin">13, 12, 13, 12</Property>
    <Property name="MaximizeBox">False</Property>
    <Property name="MinimizeBox">False</Property>
    <Property name="Name">formEncryptor</Property>
    <Property name="StartPosition">CenterScreen</Property>
    <Property name="Text">Encryptor</Property>
    <Event name="Load">formEncryptor_Load</Event>
    <Object type="System.Windows.Forms.GroupBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="groupbox5" children="Controls">
      <Property name="Location">15, 64</Property>
      <Property name="Margin">6, 6, 6, 6</Property>
      <Property name="Name">groupbox5</Property>
      <Property name="Padding">6, 6, 6, 6</Property>
      <Property name="Size">1231, 231</Property>
      <Property name="TabIndex">109</Property>
      <Property name="TabStop">False</Property>
      <Property name="Text">Encryption</Property>
      <Object type="System.Windows.Forms.GroupBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="groupboxEncrypt" children="Controls">
        <Property name="Location">12, 37</Property>
        <Property name="Margin">6, 6, 6, 6</Property>
        <Property name="Name">groupboxEncrypt</Property>
        <Property name="Padding">6, 6, 6, 6</Property>
        <Property name="Size">247, 167</Property>
        <Property name="TabIndex">105</Property>
        <Property name="TabStop">False</Property>
        <Property name="Text">Item</Property>
        <Object type="System.Windows.Forms.RadioButton, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="radiobuttonFile" children="Controls">
          <Property name="Location">12, 37</Property>
          <Property name="Margin">6, 6, 6, 6</Property>
          <Property name="Name">radiobuttonFile</Property>
          <Property name="Size">225, 48</Property>
          <Property name="TabIndex">0</Property>
          <Property name="TabStop">True</Property>
          <Property name="Text">File</Property>
          <Property name="UseVisualStyleBackColor">True</Property>
          <Event name="CheckedChanged">radiobuttonFile_CheckedChanged</Event>
        </Object>
        <Object type="System.Windows.Forms.RadioButton, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="radiobuttonDirectory" children="Controls">
          <Property name="Location">12, 97</Property>
          <Property name="Margin">6, 6, 6, 6</Property>
          <Property name="Name">radiobuttonDirectory</Property>
          <Property name="Size">225, 48</Property>
          <Property name="TabIndex">1</Property>
          <Property name="TabStop">True</Property>
          <Property name="Text">Directory</Property>
          <Property name="UseVisualStyleBackColor">True</Property>
          <Event name="CheckedChanged">radiobuttonDirectory_CheckedChanged</Event>
        </Object>
      </Object>
      <Object type="System.Windows.Forms.GroupBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="groupbox1" children="Controls">
        <Property name="Location">271, 37</Property>
        <Property name="Margin">6, 6, 6, 6</Property>
        <Property name="Name">groupbox1</Property>
        <Property name="Padding">6, 6, 6, 6</Property>
        <Property name="Size">740, 167</Property>
        <Property name="TabIndex">104</Property>
        <Property name="TabStop">False</Property>
        <Property name="Text">Details</Property>
        <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelEncryptionKey" children="Controls">
          <Property name="AutoSize">True</Property>
          <Property name="Location">12, 116</Property>
          <Property name="Margin">6, 0, 6, 0</Property>
          <Property name="Name">labelEncryptionKey</Property>
          <Property name="Size">159, 26</Property>
          <Property name="TabIndex">101</Property>
          <Property name="Text">Encryption Key</Property>
        </Object>
        <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelFileFolder" children="Controls">
          <Property name="AutoSize">True</Property>
          <Property name="Location">10, 45</Property>
          <Property name="Margin">6, 0, 6, 0</Property>
          <Property name="Name">labelFileFolder</Property>
          <Property name="Size">114, 26</Property>
          <Property name="TabIndex">100</Property>
          <Property name="Text">File/Folder</Property>
        </Object>
        <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="textboxPATH" children="Controls">
          <Property name="BackColor">Window</Property>
          <Property name="Location">183, 45</Property>
          <Property name="Margin">6, 6, 6, 6</Property>
          <Property name="Name">textboxPATH</Property>
          <Property name="ReadOnly">True</Property>
          <Property name="Size">545, 32</Property>
          <Property name="TabIndex">102</Property>
        </Object>
        <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="textboxKEY" children="Controls">
          <Property name="BackColor">Window</Property>
          <Property name="Location">183, 113</Property>
          <Property name="Margin">6, 6, 6, 6</Property>
          <Property name="Name">textboxKEY</Property>
          <Property name="ReadOnly">True</Property>
          <Property name="Size">545, 32</Property>
          <Property name="TabIndex">103</Property>
        </Object>
      </Object>
      <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonEncrypt" children="Controls">
        <Property name="Location">1052, 106</Property>
        <Property name="Margin">6, 6, 6, 6</Property>
        <Property name="Name">buttonEncrypt</Property>
        <Property name="Size">162, 46</Property>
        <Property name="TabIndex">2</Property>
        <Property name="Text">&amp;Encrypt</Property>
        <Property name="UseVisualStyleBackColor">True</Property>
        <Event name="Click">buttonEncrypt_Click</Event>
      </Object>
    </Object>
    <Object type="System.Windows.Forms.GroupBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="groupbox4" children="Controls">
      <Property name="Location">15, 307</Property>
      <Property name="Margin">6, 6, 6, 6</Property>
      <Property name="Name">groupbox4</Property>
      <Property name="Padding">6, 6, 6, 6</Property>
      <Property name="Size">1231, 223</Property>
      <Property name="TabIndex">108</Property>
      <Property name="TabStop">False</Property>
      <Property name="Text">Decryption</Property>
      <Object type="System.Windows.Forms.GroupBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="groupbox2" children="Controls">
        <Property name="Location">12, 37</Property>
        <Property name="Margin">6, 6, 6, 6</Property>
        <Property name="Name">groupbox2</Property>
        <Property name="Padding">6, 6, 6, 6</Property>
        <Property name="Size">247, 167</Property>
        <Property name="TabIndex">106</Property>
        <Property name="TabStop">False</Property>
        <Property name="Text">Item</Property>
        <Object type="System.Windows.Forms.RadioButton, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="radioFileDecrypt" children="Controls">
          <Property name="Location">12, 37</Property>
          <Property name="Margin">6, 6, 6, 6</Property>
          <Property name="Name">radioFileDecrypt</Property>
          <Property name="Size">225, 48</Property>
          <Property name="TabIndex">0</Property>
          <Property name="TabStop">True</Property>
          <Property name="Text">File</Property>
          <Property name="UseVisualStyleBackColor">True</Property>
          <Event name="CheckedChanged">radioFileDecrypt_CheckedChanged</Event>
        </Object>
        <Object type="System.Windows.Forms.RadioButton, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="radioDirectoryDecrypt" children="Controls">
          <Property name="Location">12, 97</Property>
          <Property name="Margin">6, 6, 6, 6</Property>
          <Property name="Name">radioDirectoryDecrypt</Property>
          <Property name="Size">225, 48</Property>
          <Property name="TabIndex">1</Property>
          <Property name="TabStop">True</Property>
          <Property name="Text">Directory</Property>
          <Property name="UseVisualStyleBackColor">True</Property>
          <Event name="CheckedChanged">radioDirectoryDecrypt_CheckedChanged</Event>
        </Object>
      </Object>
      <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonDecrypt" children="Controls">
        <Property name="Location">1052, 97</Property>
        <Property name="Margin">6, 6, 6, 6</Property>
        <Property name="Name">buttonDecrypt</Property>
        <Property name="Size">162, 46</Property>
        <Property name="TabIndex">107</Property>
        <Property name="Text">Decrypt</Property>
        <Property name="UseVisualStyleBackColor">True</Property>
        <Event name="Click">buttonDecrypt_Click</Event>
      </Object>
      <Object type="System.Windows.Forms.GroupBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="groupbox3" children="Controls">
        <Property name="Location">271, 37</Property>
        <Property name="Margin">6, 6, 6, 6</Property>
        <Property name="Name">groupbox3</Property>
        <Property name="Padding">6, 6, 6, 6</Property>
        <Property name="Size">740, 167</Property>
        <Property name="TabIndex">105</Property>
        <Property name="TabStop">False</Property>
        <Property name="Text">AES Key</Property>
        <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="label1" children="Controls">
          <Property name="AutoSize">True</Property>
          <Property name="Location">12, 80</Property>
          <Property name="Margin">6, 0, 6, 0</Property>
          <Property name="Name">label1</Property>
          <Property name="Size">159, 26</Property>
          <Property name="TabIndex">101</Property>
          <Property name="Text">Encryption Key</Property>
        </Object>
        <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="textboxDecryptKey" children="Controls">
          <Property name="BackColor">Window</Property>
          <Property name="Location">183, 77</Property>
          <Property name="Margin">6, 6, 6, 6</Property>
          <Property name="Name">textboxDecryptKey</Property>
          <Property name="Size">545, 32</Property>
          <Property name="TabIndex">103</Property>
        </Object>
      </Object>
    </Object>
    <Object type="System.Windows.Forms.MenuStrip, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="menustrip1" children="Controls">
      <Property name="Items">
        <Item type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <Reference name="fileToolStripMenuItem" />
        </Item>
        <Item type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <Reference name="toolsToolStripMenuItem" />
        </Item>
        <Item type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <Reference name="aboutToolStripMenuItem" />
        </Item>
      </Property>
      <Property name="Location">0, 0</Property>
      <Property name="Name">menustrip1</Property>
      <Property name="Padding">13, 4, 0, 4</Property>
      <Property name="Size">1263, 44</Property>
      <Property name="TabIndex">110</Property>
      <Property name="Text">menustrip1</Property>
    </Object>
  </Object>
  <Object type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="fileToolStripMenuItem">
    <Property name="DropDownItems">
      <Item type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <Reference name="exitToolStripMenuItem" />
      </Item>
    </Property>
    <Property name="Name">fileToolStripMenuItem</Property>
    <Property name="Size">63, 36</Property>
    <Property name="Text">File</Property>
  </Object>
  <Object type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="exitToolStripMenuItem">
    <Property name="Name">exitToolStripMenuItem</Property>
    <Property name="Size">152, 36</Property>
    <Property name="Text">Exit</Property>
    <Event name="Click">exitToolStripMenuItem_Click</Event>
  </Object>
  <Object type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="toolsToolStripMenuItem">
    <Property name="DropDownItems">
      <Item type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <Reference name="encryptionToolStripMenuItem" />
      </Item>
      <Item type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <Reference name="decryptionToolStripMenuItem" />
      </Item>
    </Property>
    <Property name="Name">toolsToolStripMenuItem</Property>
    <Property name="Size">81, 36</Property>
    <Property name="Text">Tools</Property>
  </Object>
  <Object type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="encryptionToolStripMenuItem">
    <Property name="DropDownItems">
      <Item type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <Reference name="clearEncryptionKeyToolStripMenuItem" />
      </Item>
      <Item type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <Reference name="clearEncryptionPathToolStripMenuItem" />
      </Item>
      <Item type="System.Windows.Forms.ToolStripSeparator, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <Reference name="toolstripseparator1" />
      </Item>
      <Item type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <Reference name="deSelectEncryptionRadioButtonsToolStripMenuItem" />
      </Item>
    </Property>
    <Property name="Name">encryptionToolStripMenuItem</Property>
    <Property name="Size">201, 36</Property>
    <Property name="Text">Encryption</Property>
  </Object>
  <Object type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="decryptionToolStripMenuItem">
    <Property name="DropDownItems">
      <Item type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <Reference name="deSelectDecryptionRadioButtonsToolStripMenuItem" />
      </Item>
    </Property>
    <Property name="Name">decryptionToolStripMenuItem</Property>
    <Property name="Size">205, 36</Property>
    <Property name="Text">Decryption</Property>
  </Object>
  <Object type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="clearEncryptionKeyToolStripMenuItem">
    <Property name="Name">clearEncryptionKeyToolStripMenuItem</Property>
    <Property name="Size">315, 36</Property>
    <Property name="Text">Clear Encryption Key</Property>
    <Event name="Click">clearEncryptionKeyToolStripMenuItem_Click</Event>
  </Object>
  <Object type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="clearEncryptionPathToolStripMenuItem">
    <Property name="Name">clearEncryptionPathToolStripMenuItem</Property>
    <Property name="Size">315, 36</Property>
    <Property name="Text">Clear Encryption Path</Property>
    <Event name="Click">clearEncryptionPathToolStripMenuItem_Click</Event>
  </Object>
  <Object type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="deSelectEncryptionRadioButtonsToolStripMenuItem">
    <Property name="Name">deSelectEncryptionRadioButtonsToolStripMenuItem</Property>
    <Property name="Size">468, 36</Property>
    <Property name="Text">De-Select Encryption Radio Buttons</Property>
    <Event name="Click">deSelectEncryptionRadioButtonsToolStripMenuItem_Click</Event>
  </Object>
  <Object type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="deSelectDecryptionRadioButtonsToolStripMenuItem">
    <Property name="Name">deSelectDecryptionRadioButtonsToolStripMenuItem</Property>
    <Property name="Size">472, 36</Property>
    <Property name="Text">De-Select Decryption Radio Buttons</Property>
    <Event name="Click">deSelectDecryptionRadioButtonsToolStripMenuItem_Click</Event>
  </Object>
  <Object type="System.Windows.Forms.ToolStripSeparator, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="toolstripseparator1">
    <Property name="Name">toolstripseparator1</Property>
    <Property name="Size">312, 6</Property>
  </Object>
  <Object type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="aboutToolStripMenuItem">
    <Property name="DropDownItems">
      <Item type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <Reference name="aboutToolStripMenuItem1" />
      </Item>
    </Property>
    <Property name="Name">aboutToolStripMenuItem</Property>
    <Property name="Size">76, 36</Property>
    <Property name="Text">Help</Property>
  </Object>
  <Object type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="aboutToolStripMenuItem1">
    <Property name="Name">aboutToolStripMenuItem1</Property>
    <Property name="Size">153, 36</Property>
    <Property name="Text">About</Property>
    <Event name="Click">aboutToolStripMenuItem1_Click</Event>
  </Object>
  <Code><![CDATA[
$formEncryptor_Load = {
	function New-AESKey()
	{
<#
.SYNOPSIS 
Generates a random AES key.

.DESCRIPTION
Generates a random AES key based on the desired key size.

.PARAMETER KeySize
Number of bits the generated key will have.

.EXAMPLE
$key = New-AESKey
This example generates a random 256-bit AES key and stores it in the variable $key.

.NOTES
Author: Tyler Siegrist
Date: 9/17/2017
#>
		[CmdletBinding()]
		[OutputType([String])]
		Param (
			[Parameter(Mandatory = $false, Position = 1)]
			[ValidateSet(128, 192, 256)]
			[Int]$KeySize = 256
		)
		
		$AESProvider = New-Object "System.Security.Cryptography.AesManaged"
		$AESProvider.KeySize = $KeySize
		$AESProvider.GenerateKey()
		return [System.Convert]::ToBase64String($AESProvider.Key)
	}
	
	Function Protect-File
	{
<#
.SYNOPSIS 
Encrypts a file using AES.

.DESCRIPTION
Encrypts a file using AES via a provided or randomly generated key.

.PARAMETER FileName
File(s) to be encrypted.

.PARAMETER Key
AES key to be used for encryption.

.PARAMETER Suffix
Suffix of the encrypted file to be removed.

.PARAMETER RemoveSource
Removes the source (decrypted) file after encrypting.

.EXAMPLE
Protect-File 'C:\secrets.txt' $key
This example encrypts C:\secrets.txt using the key stored in the variable $key. The encrypted file would have the default extension of '.AES' and the source (decrypted) file would not be removed.

.EXAMPLE
Protect-File 'C:\secrets.txt' -Suffix '.Encrypted' -RemoveSource
This example encrypts C:\secrets.txt with a randomly generated AES key. The encrypted file would have an extension of '.Encrypted' and the source (decrypted) file would be removed.

.EXAMPLE
Get-ChildItem 'C:\Files' -Recurse | Protect-File -Key $key -RemoveSource
This example encrypts all of the files under the C:\Files directory using the key stored in the variable $key. The encrypted files would have the default extension of '.AES' and the source (decrypted) files would be removed.

.NOTES
Author: Tyler Siegrist
Date: 9/17/2017
#>
		[CmdletBinding()]
		[OutputType([System.IO.FileInfo[]])]
		Param (
			[Parameter(Mandatory = $true, Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true)]
			[Alias('PSPath', 'LiteralPath')]
			[string[]]$FileName,
			[Parameter(Mandatory = $false, Position = 2)]
			[String]$Key = (New-AESKey),
			[Parameter(Mandatory = $false, Position = 3)]
			[String]$Suffix = '.AES',
			[Parameter()]
			[Switch]$RemoveSource
		)
		Begin
		{
			#Configure AES
			try
			{
				$EncryptionKey = [System.Convert]::FromBase64String($Key)
				$KeySize = $EncryptionKey.Length * 8
				$AESProvider = New-Object 'System.Security.Cryptography.AesManaged'
				$AESProvider.Mode = [System.Security.Cryptography.CipherMode]::CBC
				$AESProvider.BlockSize = 128
				$AESProvider.KeySize = $KeySize
				$AESProvider.Key = $EncryptionKey
			}
			Catch
			{
				Write-Error $_ -ErrorAction Stop
			}
		}
		Process
		{
			$Files = Get-Item -LiteralPath $FileName
			
			ForEach ($File in $Files)
			{
				$DestinationFile = $File.FullName + $Suffix
				
				Try
				{
					$FileStreamReader = New-Object System.IO.FileStream($File.FullName, [System.IO.FileMode]::Open)
					$FileStreamWriter = New-Object System.IO.FileStream($DestinationFile, [System.IO.FileMode]::Create)
					
					#Write IV (initialization-vector) length & IV to encrypted file
					$AESProvider.GenerateIV()
					$FileStreamWriter.Write([System.BitConverter]::GetBytes($AESProvider.IV.Length), 0, 4)
					$FileStreamWriter.Write($AESProvider.IV, 0, $AESProvider.IV.Length)
					
					#Perform encryption
					$Transform = $AESProvider.CreateEncryptor()
					$CryptoStream = New-Object System.Security.Cryptography.CryptoStream($FileStreamWriter, $Transform, [System.Security.Cryptography.CryptoStreamMode]::Write)
					[Int]$Count = 0
					[Int]$BlockSizeBytes = $AESProvider.BlockSize / 8
					[Byte[]]$Data = New-Object Byte[] $BlockSizeBytes
					Do
					{
						$Count = $FileStreamReader.Read($Data, 0, $BlockSizeBytes)
						$CryptoStream.Write($Data, 0, $Count)
					}
					While ($Count -gt 0)
					
					#Close open files
					$CryptoStream.FlushFinalBlock()
					$CryptoStream.Close()
					$FileStreamReader.Close()
					$FileStreamWriter.Close()
					
					#Output ecrypted file
					Get-Item $DestinationFile | Add-Member –MemberType NoteProperty –Name Key –Value $Key -PassThru | Add-Member –MemberType NoteProperty –Name SourceFile –Value $File.FullName -PassThru
					
					#Delete unencrypted file
					if ($RemoveSource) { Remove-Item -LiteralPath $File.FullName }
				}
				Catch
				{
					Write-Error $_
					If ($FileStreamWriter)
					{
						#Remove failed file
						Remove-Item -LiteralPath $DestinationFile -Force
					}
					Continue
				}
				Finally
				{
					if ($CryptoStream) { $CryptoStream.Close() }
					if ($FileStreamReader) { $FileStreamReader.Close() }
					if ($FileStreamWriter) { $FileStreamWriter.Close() }
				}
			}
		}
		End { }
	}
	
	Function Unprotect-File
	{
<#
.SYNOPSIS 
Decrypts an AES encrypted file.

.DESCRIPTION
Decrypts a file using a provided AES key.

.PARAMETER FileName
File(s) to be decrypted.

.PARAMETER Key
AES key to be used for decryption.

.PARAMETER Suffix
Suffix of the encrypted file to be removed.

.PARAMETER RemoveSource
Removes the source (encrypted) file after decrypting.

.EXAMPLE
Unprotect-File 'C:\secrets.txt.AES' $key
This example decrypts C:\secrets.txt.AES using the key stored in the variable $key. The decrypted file would remove the default extension of '.AES' and the source (encrypted) file would not be removed.

.EXAMPLE
Unprotect-File 'C:\secrets.txt.Encrypted' -Key $key -Suffix '.Encrypted' -RemoveSource
This example decrypts C:\secrets.txt.Encrypted using the key stored in the variable $key. The decrypted file would remove the extension of '.Encrypted' and the source (encrypted) file would be removed.

.EXAMPLE
Get-ChildItem 'C:\Files' -Recurse | Unprotect-File -Key $key -RemoveSource
This example decrypts all of the files under the C:\Files directory using the key stored in the variable $key. The decrypted files would remove the default extension of '.AES' and the source (encrypted) files would be removed.

.NOTES
Author: Tyler Siegrist
Date: 9/17/2017
#>
		[CmdletBinding()]
		[OutputType([System.IO.FileInfo[]])]
		Param (
			[Parameter(Mandatory = $true, Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true)]
			[Alias('PSPath', 'LiteralPath')]
			[string[]]$FileName,
			[Parameter(Mandatory = $true, Position = 2, ValueFromPipelineByPropertyName = $true)]
			[String]$Key,
			[Parameter(Mandatory = $false, Position = 3)]
			[String]$Suffix = '.AES',
			[Parameter()]
			[Switch]$RemoveSource
		)
		Process
		{
			#Configure AES
			try
			{
				$EncryptionKey = [System.Convert]::FromBase64String($Key)
				$KeySize = $EncryptionKey.Length * 8
				$AESProvider = New-Object 'System.Security.Cryptography.AesManaged'
				$AESProvider.Mode = [System.Security.Cryptography.CipherMode]::CBC
				$AESProvider.BlockSize = 128
				$AESProvider.KeySize = $KeySize
				$AESProvider.Key = $EncryptionKey
			}
			Catch
			{
				Write-Error $_ -ErrorAction Stop
			}
			
			#Used to store successfully decrypted file names.
			$Files = Get-Item -LiteralPath $FileName
			
			ForEach ($File in $Files)
			{
				#Verify file ends with supplied suffix
				If (-not $File.Name.EndsWith($Suffix))
				{
					Write-Error "$($File.FullName) does not have an extension of '$Suffix'."
					Continue
				}
				
				$DestinationFile = $File.FullName -replace "$Suffix$"
				
				Try
				{
					$FileStreamReader = New-Object System.IO.FileStream($File.FullName, [System.IO.FileMode]::Open)
					$FileStreamWriter = New-Object System.IO.FileStream($DestinationFile, [System.IO.FileMode]::Create)
					
					#Get IV from file
					[Byte[]]$LenIV = New-Object Byte[] 4
					$FileStreamReader.Seek(0, [System.IO.SeekOrigin]::Begin) | Out-Null
					$FileStreamReader.Read($LenIV, 0, 3) | Out-Null
					[Int]$LIV = [System.BitConverter]::ToInt32($LenIV, 0)
					[Byte[]]$IV = New-Object Byte[] $LIV
					$FileStreamReader.Seek(4, [System.IO.SeekOrigin]::Begin) | Out-Null
					$FileStreamReader.Read($IV, 0, $LIV) | Out-Null
					$AESProvider.IV = $IV
					
					#Peform Decryption
					$Transform = $AESProvider.CreateDecryptor()
					[Int]$Count = 0
					[Int]$BlockSizeBytes = $AESProvider.BlockSize / 8
					[Byte[]]$Data = New-Object Byte[] $BlockSizeBytes
					$CryptoStream = New-Object System.Security.Cryptography.CryptoStream($FileStreamWriter, $Transform, [System.Security.Cryptography.CryptoStreamMode]::Write)
					Do
					{
						$Count = $FileStreamReader.Read($Data, 0, $BlockSizeBytes)
						$CryptoStream.Write($Data, 0, $Count)
					}
					While ($Count -gt 0)
					
					#Close open files
					$CryptoStream.FlushFinalBlock()
					$CryptoStream.Close()
					$FileStreamReader.Close()
					$FileStreamWriter.Close()
					
					#Output decrypted file
					Get-Item $DestinationFile | Add-Member –MemberType NoteProperty –Name SourceFile –Value $File.FullName -PassThru
					
					#Delete encrypted file
					if ($RemoveSource) { Remove-Item $File.FullName }
				}
				Catch
				{
					Write-Error $_
					If ($FileStreamWriter)
					{
						#Remove failed file
						Remove-Item -LiteralPath $DestinationFile -Force
					}
					Continue
				}
				Finally
				{
					if ($CryptoStream) { $CryptoStream.Close() }
					if ($FileStreamReader) { $FileStreamReader.Close() }
					if ($FileStreamWriter) { $FileStreamWriter.Close() }
				}
			}
		}
	}
	
	
	Function New-WPFMessageBox
	{
		
		# For examples for use, see my blog:
		# https://smsagent.wordpress.com/2017/08/24/a-customisable-wpf-messagebox-for-powershell/
		
		# CHANGES
		# 2017-09-11 - Added some required assemblies in the dynamic parameters to avoid errors when run from the PS console host.
		
		# Define Parameters
		[CmdletBinding()]
		Param
		(
			# The popup Content
			[Parameter(Mandatory = $True, Position = 0)]
			[Object]$Content,
			# The window title

			[Parameter(Mandatory = $false, Position = 1)]
			[string]$Title,
			# The buttons to add

			[Parameter(Mandatory = $false, Position = 2)]
			[ValidateSet('OK', 'OK-Cancel', 'Abort-Retry-Ignore', 'Yes-No-Cancel', 'Yes-No', 'Retry-Cancel', 'Cancel-TryAgain-Continue', 'None')]
			[array]$ButtonType = 'OK',
			# The buttons to add

			[Parameter(Mandatory = $false, Position = 3)]
			[array]$CustomButtons,
			# Content font size

			[Parameter(Mandatory = $false, Position = 4)]
			[int]$ContentFontSize = 14,
			# Title font size

			[Parameter(Mandatory = $false, Position = 5)]
			[int]$TitleFontSize = 14,
			# BorderThickness

			[Parameter(Mandatory = $false, Position = 6)]
			[int]$BorderThickness = 0,
			# CornerRadius

			[Parameter(Mandatory = $false, Position = 7)]
			[int]$CornerRadius = 8,
			# ShadowDepth

			[Parameter(Mandatory = $false, Position = 8)]
			[int]$ShadowDepth = 3,
			# BlurRadius

			[Parameter(Mandatory = $false, Position = 9)]
			[int]$BlurRadius = 20,
			# WindowHost

			[Parameter(Mandatory = $false, Position = 10)]
			[object]$WindowHost,
			# Timeout in seconds,

			[Parameter(Mandatory = $false, Position = 11)]
			[int]$Timeout,
			# Code for Window Loaded event,

			[Parameter(Mandatory = $false, Position = 12)]
			[scriptblock]$OnLoaded,
			# Code for Window Closed event,

			[Parameter(Mandatory = $false, Position = 13)]
			[scriptblock]$OnClosed
			
		)
		
		# Dynamically Populated parameters
		DynamicParam
		{
			
			# Add assemblies for use in PS Console 
			Add-Type -AssemblyName System.Drawing, PresentationCore
			
			# ContentBackground
			$ContentBackground = 'ContentBackground'
			$AttributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]
			$ParameterAttribute = New-Object System.Management.Automation.ParameterAttribute
			$ParameterAttribute.Mandatory = $False
			$AttributeCollection.Add($ParameterAttribute)
			$RuntimeParameterDictionary = New-Object System.Management.Automation.RuntimeDefinedParameterDictionary
			$arrSet = [System.Drawing.Brushes] | Get-Member -Static -MemberType Property | Select-Object -ExpandProperty Name
			$ValidateSetAttribute = New-Object System.Management.Automation.ValidateSetAttribute($arrSet)
			$AttributeCollection.Add($ValidateSetAttribute)
			$PSBoundParameters.ContentBackground = "White"
			$RuntimeParameter = New-Object System.Management.Automation.RuntimeDefinedParameter($ContentBackground, [string], $AttributeCollection)
			$RuntimeParameterDictionary.Add($ContentBackground, $RuntimeParameter)
			
			
			# FontFamily
			$FontFamily = 'FontFamily'
			$AttributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]
			$ParameterAttribute = New-Object System.Management.Automation.ParameterAttribute
			$ParameterAttribute.Mandatory = $False
			$AttributeCollection.Add($ParameterAttribute)
			$arrSet = [System.Drawing.FontFamily]::Families | Select-Object -ExpandProperty Name
			$ValidateSetAttribute = New-Object System.Management.Automation.ValidateSetAttribute($arrSet)
			$AttributeCollection.Add($ValidateSetAttribute)
			$RuntimeParameter = New-Object System.Management.Automation.RuntimeDefinedParameter($FontFamily, [string], $AttributeCollection)
			$RuntimeParameterDictionary.Add($FontFamily, $RuntimeParameter)
			$PSBoundParameters.FontFamily = "Segui"
			
			# TitleFontWeight
			$TitleFontWeight = 'TitleFontWeight'
			$AttributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]
			$ParameterAttribute = New-Object System.Management.Automation.ParameterAttribute
			$ParameterAttribute.Mandatory = $False
			$AttributeCollection.Add($ParameterAttribute)
			$arrSet = [System.Windows.FontWeights] | Get-Member -Static -MemberType Property | Select-Object -ExpandProperty Name
			$ValidateSetAttribute = New-Object System.Management.Automation.ValidateSetAttribute($arrSet)
			$AttributeCollection.Add($ValidateSetAttribute)
			$PSBoundParameters.TitleFontWeight = "Normal"
			$RuntimeParameter = New-Object System.Management.Automation.RuntimeDefinedParameter($TitleFontWeight, [string], $AttributeCollection)
			$RuntimeParameterDictionary.Add($TitleFontWeight, $RuntimeParameter)
			
			# ContentFontWeight
			$ContentFontWeight = 'ContentFontWeight'
			$AttributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]
			$ParameterAttribute = New-Object System.Management.Automation.ParameterAttribute
			$ParameterAttribute.Mandatory = $False
			$AttributeCollection.Add($ParameterAttribute)
			$arrSet = [System.Windows.FontWeights] | Get-Member -Static -MemberType Property | Select-Object -ExpandProperty Name
			$ValidateSetAttribute = New-Object System.Management.Automation.ValidateSetAttribute($arrSet)
			$AttributeCollection.Add($ValidateSetAttribute)
			$PSBoundParameters.ContentFontWeight = "Normal"
			$RuntimeParameter = New-Object System.Management.Automation.RuntimeDefinedParameter($ContentFontWeight, [string], $AttributeCollection)
			$RuntimeParameterDictionary.Add($ContentFontWeight, $RuntimeParameter)
			
			
			# ContentTextForeground
			$ContentTextForeground = 'ContentTextForeground'
			$AttributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]
			$ParameterAttribute = New-Object System.Management.Automation.ParameterAttribute
			$ParameterAttribute.Mandatory = $False
			$AttributeCollection.Add($ParameterAttribute)
			$arrSet = [System.Drawing.Brushes] | Get-Member -Static -MemberType Property | Select-Object -ExpandProperty Name
			$ValidateSetAttribute = New-Object System.Management.Automation.ValidateSetAttribute($arrSet)
			$AttributeCollection.Add($ValidateSetAttribute)
			$PSBoundParameters.ContentTextForeground = "Black"
			$RuntimeParameter = New-Object System.Management.Automation.RuntimeDefinedParameter($ContentTextForeground, [string], $AttributeCollection)
			$RuntimeParameterDictionary.Add($ContentTextForeground, $RuntimeParameter)
			
			# TitleTextForeground
			$TitleTextForeground = 'TitleTextForeground'
			$AttributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]
			$ParameterAttribute = New-Object System.Management.Automation.ParameterAttribute
			$ParameterAttribute.Mandatory = $False
			$AttributeCollection.Add($ParameterAttribute)
			$arrSet = [System.Drawing.Brushes] | Get-Member -Static -MemberType Property | Select-Object -ExpandProperty Name
			$ValidateSetAttribute = New-Object System.Management.Automation.ValidateSetAttribute($arrSet)
			$AttributeCollection.Add($ValidateSetAttribute)
			$PSBoundParameters.TitleTextForeground = "Black"
			$RuntimeParameter = New-Object System.Management.Automation.RuntimeDefinedParameter($TitleTextForeground, [string], $AttributeCollection)
			$RuntimeParameterDictionary.Add($TitleTextForeground, $RuntimeParameter)
			
			# BorderBrush
			$BorderBrush = 'BorderBrush'
			$AttributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]
			$ParameterAttribute = New-Object System.Management.Automation.ParameterAttribute
			$ParameterAttribute.Mandatory = $False
			$AttributeCollection.Add($ParameterAttribute)
			$arrSet = [System.Drawing.Brushes] | Get-Member -Static -MemberType Property | Select-Object -ExpandProperty Name
			$ValidateSetAttribute = New-Object System.Management.Automation.ValidateSetAttribute($arrSet)
			$AttributeCollection.Add($ValidateSetAttribute)
			$PSBoundParameters.BorderBrush = "Black"
			$RuntimeParameter = New-Object System.Management.Automation.RuntimeDefinedParameter($BorderBrush, [string], $AttributeCollection)
			$RuntimeParameterDictionary.Add($BorderBrush, $RuntimeParameter)
			
			
			# TitleBackground
			$TitleBackground = 'TitleBackground'
			$AttributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]
			$ParameterAttribute = New-Object System.Management.Automation.ParameterAttribute
			$ParameterAttribute.Mandatory = $False
			$AttributeCollection.Add($ParameterAttribute)
			$arrSet = [System.Drawing.Brushes] | Get-Member -Static -MemberType Property | Select-Object -ExpandProperty Name
			$ValidateSetAttribute = New-Object System.Management.Automation.ValidateSetAttribute($arrSet)
			$AttributeCollection.Add($ValidateSetAttribute)
			$PSBoundParameters.TitleBackground = "White"
			$RuntimeParameter = New-Object System.Management.Automation.RuntimeDefinedParameter($TitleBackground, [string], $AttributeCollection)
			$RuntimeParameterDictionary.Add($TitleBackground, $RuntimeParameter)
			
			# ButtonTextForeground
			$ButtonTextForeground = 'ButtonTextForeground'
			$AttributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]
			$ParameterAttribute = New-Object System.Management.Automation.ParameterAttribute
			$ParameterAttribute.Mandatory = $False
			$AttributeCollection.Add($ParameterAttribute)
			$arrSet = [System.Drawing.Brushes] | Get-Member -Static -MemberType Property | Select-Object -ExpandProperty Name
			$ValidateSetAttribute = New-Object System.Management.Automation.ValidateSetAttribute($arrSet)
			$AttributeCollection.Add($ValidateSetAttribute)
			$PSBoundParameters.ButtonTextForeground = "Black"
			$RuntimeParameter = New-Object System.Management.Automation.RuntimeDefinedParameter($ButtonTextForeground, [string], $AttributeCollection)
			$RuntimeParameterDictionary.Add($ButtonTextForeground, $RuntimeParameter)
			
			# Sound
			$Sound = 'Sound'
			$AttributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]
			$ParameterAttribute = New-Object System.Management.Automation.ParameterAttribute
			$ParameterAttribute.Mandatory = $False
			#$ParameterAttribute.Position = 14
			$AttributeCollection.Add($ParameterAttribute)
			$arrSet = (Get-ChildItem "$env:SystemDrive\Windows\Media" -Filter Windows* | Select-Object -ExpandProperty Name).Replace('.wav', '')
			$ValidateSetAttribute = New-Object System.Management.Automation.ValidateSetAttribute($arrSet)
			$AttributeCollection.Add($ValidateSetAttribute)
			$RuntimeParameter = New-Object System.Management.Automation.RuntimeDefinedParameter($Sound, [string], $AttributeCollection)
			$RuntimeParameterDictionary.Add($Sound, $RuntimeParameter)
			
			return $RuntimeParameterDictionary
		}
		
		Begin
		{
			Add-Type -AssemblyName PresentationFramework
		}
		
		Process
		{
			
			# Define the XAML markup
			[XML]$Xaml = @"
<Window 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        x:Name="Window" Title="" SizeToContent="WidthAndHeight" WindowStartupLocation="CenterScreen" WindowStyle="None" ResizeMode="NoResize" AllowsTransparency="True" Background="Transparent" Opacity="1">
    <Window.Resources>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border>
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Border x:Name="MainBorder" Margin="10" CornerRadius="$CornerRadius" BorderThickness="$BorderThickness" BorderBrush="$($PSBoundParameters.BorderBrush)" Padding="0" >
        <Border.Effect>
            <DropShadowEffect x:Name="DSE" Color="Black" Direction="270" BlurRadius="$BlurRadius" ShadowDepth="$ShadowDepth" Opacity="0.6" />
        </Border.Effect>
        <Border.Triggers>
            <EventTrigger RoutedEvent="Window.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="DSE" Storyboard.TargetProperty="ShadowDepth" From="0" To="$ShadowDepth" Duration="0:0:1" AutoReverse="False" />
                        <DoubleAnimation Storyboard.TargetName="DSE" Storyboard.TargetProperty="BlurRadius" From="0" To="$BlurRadius" Duration="0:0:1" AutoReverse="False" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Border.Triggers>
        <Grid >
            <Border Name="Mask" CornerRadius="$CornerRadius" Background="$($PSBoundParameters.ContentBackground)" />
            <Grid x:Name="Grid" Background="$($PSBoundParameters.ContentBackground)">
                <Grid.OpacityMask>
                    <VisualBrush Visual="{Binding ElementName=Mask}"/>
                </Grid.OpacityMask>
                <StackPanel Name="StackPanel" >                   
                    <TextBox Name="TitleBar" IsReadOnly="True" IsHitTestVisible="False" Text="$Title" Padding="10" FontFamily="$($PSBoundParameters.FontFamily)" FontSize="$TitleFontSize" Foreground="$($PSBoundParameters.TitleTextForeground)" FontWeight="$($PSBoundParameters.TitleFontWeight)" Background="$($PSBoundParameters.TitleBackground)" HorizontalAlignment="Stretch" VerticalAlignment="Center" Width="Auto" HorizontalContentAlignment="Center" BorderThickness="0"/>
                    <DockPanel Name="ContentHost" Margin="0,10,0,10"  >
                    </DockPanel>
                    <DockPanel Name="ButtonHost" LastChildFill="False" HorizontalAlignment="Center" >
                    </DockPanel>
                </StackPanel>
            </Grid>
        </Grid>
    </Border>
</Window>
"@
			
			[XML]$ButtonXaml = @"
<Button xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Width="Auto" Height="30" FontFamily="Segui" FontSize="16" Background="Transparent" Foreground="White" BorderThickness="1" Margin="10" Padding="20,0,20,0" HorizontalAlignment="Right" Cursor="Hand"/>
"@
			
			[XML]$ButtonTextXaml = @"
<TextBlock xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" FontFamily="$($PSBoundParameters.FontFamily)" FontSize="16" Background="Transparent" Foreground="$($PSBoundParameters.ButtonTextForeground)" Padding="20,5,20,5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
"@
			
			[XML]$ContentTextXaml = @"
<TextBlock xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Text="$Content" Foreground="$($PSBoundParameters.ContentTextForeground)" DockPanel.Dock="Right" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="$($PSBoundParameters.FontFamily)" FontSize="$ContentFontSize" FontWeight="$($PSBoundParameters.ContentFontWeight)" TextWrapping="Wrap" Height="Auto" MaxWidth="500" MinWidth="50" Padding="10"/>
"@
			
			# Load the window from XAML
			$Window = [Windows.Markup.XamlReader]::Load((New-Object -TypeName System.Xml.XmlNodeReader -ArgumentList $xaml))
			
			# Custom function to add a button
			Function Add-Button
			{
				Param ($Content)
				$Button = [Windows.Markup.XamlReader]::Load((New-Object -TypeName System.Xml.XmlNodeReader -ArgumentList $ButtonXaml))
				$ButtonText = [Windows.Markup.XamlReader]::Load((New-Object -TypeName System.Xml.XmlNodeReader -ArgumentList $ButtonTextXaml))
				$ButtonText.Text = "$Content"
				$Button.Content = $ButtonText
				$Button.Add_MouseEnter({
						$This.Content.FontSize = "17"
					})
				$Button.Add_MouseLeave({
						$This.Content.FontSize = "16"
					})
				$Button.Add_Click({
						New-Variable -Name WPFMessageBoxOutput -Value $($This.Content.Text) -Option ReadOnly -Scope Script -Force
						$Window.Close()
					})
				$Window.FindName('ButtonHost').AddChild($Button)
			}
			
			# Add buttons
			If ($ButtonType -eq "OK")
			{
				Add-Button -Content "OK"
			}
			
			If ($ButtonType -eq "OK-Cancel")
			{
				Add-Button -Content "OK"
				Add-Button -Content "Cancel"
			}
			
			If ($ButtonType -eq "Abort-Retry-Ignore")
			{
				Add-Button -Content "Abort"
				Add-Button -Content "Retry"
				Add-Button -Content "Ignore"
			}
			
			If ($ButtonType -eq "Yes-No-Cancel")
			{
				Add-Button -Content "Yes"
				Add-Button -Content "No"
				Add-Button -Content "Cancel"
			}
			
			If ($ButtonType -eq "Yes-No")
			{
				Add-Button -Content "Yes"
				Add-Button -Content "No"
			}
			
			If ($ButtonType -eq "Retry-Cancel")
			{
				Add-Button -Content "Retry"
				Add-Button -Content "Cancel"
			}
			
			If ($ButtonType -eq "Cancel-TryAgain-Continue")
			{
				Add-Button -Content "Cancel"
				Add-Button -Content "TryAgain"
				Add-Button -Content "Continue"
			}
			
			If ($ButtonType -eq "None" -and $CustomButtons)
			{
				Foreach ($CustomButton in $CustomButtons)
				{
					Add-Button -Content "$CustomButton"
				}
			}
			
			# Remove the title bar if no title is provided
			If ($Title -eq "")
			{
				$TitleBar = $Window.FindName('TitleBar')
				$Window.FindName('StackPanel').Children.Remove($TitleBar)
			}
			
			# Add the Content
			If ($Content -is [String])
			{
				# Replace double quotes with single to avoid quote issues in strings
				If ($Content -match '"')
				{
					$Content = $Content.Replace('"', "'")
				}
				
				# Use a text box for a string value...
				$ContentTextBox = [Windows.Markup.XamlReader]::Load((New-Object -TypeName System.Xml.XmlNodeReader -ArgumentList $ContentTextXaml))
				$Window.FindName('ContentHost').AddChild($ContentTextBox)
			}
			Else
			{
				# ...or add a WPF element as a child
				Try
				{
					$Window.FindName('ContentHost').AddChild($Content)
				}
				Catch
				{
					$_
				}
			}
			
			# Enable window to move when dragged
			$Window.FindName('Grid').Add_MouseLeftButtonDown({
					$Window.DragMove()
				})
			
			# Activate the window on loading
			If ($OnLoaded)
			{
				$Window.Add_Loaded({
						$This.Activate()
						Invoke-Command $OnLoaded
					})
			}
			Else
			{
				$Window.Add_Loaded({
						$This.Activate()
					})
			}
			
			
			# Stop the dispatcher timer if exists
			If ($OnClosed)
			{
				$Window.Add_Closed({
						If ($DispatcherTimer)
						{
							$DispatcherTimer.Stop()
						}
						Invoke-Command $OnClosed
					})
			}
			Else
			{
				$Window.Add_Closed({
						If ($DispatcherTimer)
						{
							$DispatcherTimer.Stop()
						}
					})
			}
			
			
			# If a window host is provided assign it as the owner
			If ($WindowHost)
			{
				$Window.Owner = $WindowHost
				$Window.WindowStartupLocation = "CenterOwner"
			}
			
			# If a timeout value is provided, use a dispatcher timer to close the window when timeout is reached
			If ($Timeout)
			{
				$Stopwatch = New-object System.Diagnostics.Stopwatch
				$TimerCode = {
					If ($Stopwatch.Elapsed.TotalSeconds -ge $Timeout)
					{
						$Stopwatch.Stop()
						$Window.Close()
					}
				}
				$DispatcherTimer = New-Object -TypeName System.Windows.Threading.DispatcherTimer
				$DispatcherTimer.Interval = [TimeSpan]::FromSeconds(1)
				$DispatcherTimer.Add_Tick($TimerCode)
				$Stopwatch.Start()
				$DispatcherTimer.Start()
			}
			
			# Play a sound
			If ($($PSBoundParameters.Sound))
			{
				$SoundFile = "$env:SystemDrive\Windows\Media\$($PSBoundParameters.Sound).wav"
				$SoundPlayer = New-Object System.Media.SoundPlayer -ArgumentList $SoundFile
				$SoundPlayer.Add_LoadCompleted({
						$This.Play()
						$This.Dispose()
					})
				$SoundPlayer.LoadAsync()
			}
			
			# Display the window
			$null = $window.Dispatcher.InvokeAsync{ $window.ShowDialog() }.Wait()
			
		}
	}
	
	
	
	
	$RegKey = Get-Item 'HKCU:\Software\LBH Software, Inc.\Encryptor' -ErrorAction SilentlyContinue
	if (! $RegKey)
	{
		#Create the root key
		New-Item 'HKCU:\Software\LBH Software, Inc.\Encryptor' -Force
	}
	$textboxKEY.Enabled = $False
}

$buttonCancel_Click={
	
}

$buttonEncrypt_Click={
	If ((!($radiobuttonDirectory.Checked)) -and (!($radiobuttonFile.Checked)))
	{
		$ErrorMsgParams = @{
			FontFamily		     = 'Calibri'
			Title			     = "ERROR!"
			TitleBackground	     = "Firebrick"
			TitleTextForeground  = "WhiteSmoke"
			TitleFontWeight	     = "UltraBold"
			TitleFontSize	     = 20
			Sound			     = 'Windows Exclamation'
		}
		New-WPFMessageBox @ErrorMsgParams -Content "Please select either a folder or directory to encrypt."
		}
	Else
	{
		If ($radiobuttonDirectory.Checked -eq $True)
		{
			If ($textboxPATH.text.Length -gt 2)
			{
				If ($textboxKEY.Text.Length -gt 2)
				{
					Try
					{
						$Key = $textboxKEY.text
						$textboxKEY.Enabled = $True
						$EncryptedDir = $textboxPATH.Text
						$Files = (Get-ChildItem $EncryptedDir -Recurse).VersionInfo.FileName
						ForEach ($File in $Files)
						{
							Protect-File -FileName $File -Key $Key
							Remove-Item $File -Confirm:$False -Force
							
						}
						$InfoParams = @{
							FontFamily			    = 'Calibri'
							Title				    = "INFORMATION"
							TitleFontSize		    = 20
							TitleBackground		    = 'LightSkyBlue'
							TitleTextForeground	    = 'DarkSlateGray'
						}
						New-WPFMessageBox @InfoParams -Content "Sucessfully encrypted $EncryptedDir"
					}
					Catch
					{
						[System.Windows.Forms.MessageBox]::Show("$_", "Error")
					}
				}
				Else
				{
					Try
					{
						$Key = New-AESKey
						$textboxKEY.Enabled = $True
						$textboxKEY.Text = $Key | Out-String
						$EncryptedDir = $textboxPATH.Text
						$Files = (Get-ChildItem $EncryptedDir -Recurse).VersionInfo.FileName
						ForEach ($File in $Files)
						{
							Protect-File -FileName $File -Key $Key
							Remove-Item $File -Confirm:$False -Force
							
						}
						$InfoParams = @{
							FontFamily				    = 'Calibri'
							Title					    = "INFORMATION"
							TitleFontSize			    = 20
							TitleBackground			    = 'LightSkyBlue'
							TitleTextForeground		    = 'DarkSlateGray'
						}
						New-WPFMessageBox @InfoParams -Content "Sucessfully encrypted $EncryptedDir"
					}
					Catch
					{
						[System.Windows.Forms.MessageBox]::Show("$_", "Error")
					}
				}
			}
			Else
			{
				$radiobuttonDirectory.Checked = $False
				$ErrorMsgParams = @{
					FontFamily				    = 'Calibri'
					Title					    = "ERROR!"
					TitleBackground			    = "Firebrick"
					TitleTextForeground		    = "WhiteSmoke"
					TitleFontWeight			    = "UltraBold"
					TitleFontSize			    = 20
					Sound					    = 'Windows Exclamation'
				}
				New-WPFMessageBox @ErrorMsgParams -Content "No directory has been selected! Please select a directory to encrypt."
			}
		}
		Elseif ($radiobuttonFile.Checked -eq $True)
		{
			If ($textboxPATH.text.Length -gt 2)
			{
				If ($textboxKEY.Text.Length -gt 2)
				{
					Try
					{
						$EncryptedFile = ($textboxPATH.text)
						$Key = $textboxKEY.Text
						$textboxKEY.Enabled = $True
						Protect-File -FileName $EncryptedFile -Key $Key
						Remove-Item $EncryptedFile -Force -Confirm:$False
						
						$InfoParams = @{
							FontFamily				   = 'Calibri'
							Title					   = "INFORMATION"
							TitleFontSize			   = 20
							TitleBackground		       = 'LightSkyBlue'
							TitleTextForeground	       = 'DarkSlateGray'
						}
						New-WPFMessageBox @InfoParams -Content "Sucessfully encrypted $EncryptedFile"
					}
					Catch
					{
						[System.Windows.Forms.MessageBox]::Show("$_", "Error")
					}
				}
				Else
				{
					Try
					{
						$EncryptedFile = ($textboxPATH.text)
						$Key = New-AESKey
						$textboxKEY.Enabled = $True
						$textboxKEY.Text = $Key | Out-String
						Protect-File -FileName $EncryptedFile -Key $Key
						Remove-Item $EncryptedFile -Force -Confirm:$False
						
						$InfoParams = @{
							FontFamily			      = 'Calibri'
							Title					  = "INFORMATION"
							TitleFontSize			  = 20
							TitleBackground		      = 'LightSkyBlue'
							TitleTextForeground	      = 'DarkSlateGray'
						}
						New-WPFMessageBox @InfoParams -Content "Sucessfully encrypted $EncryptedFile"
					}
					Catch
					{
						[System.Windows.Forms.MessageBox]::Show("$_", "Error")
					}
				}
			}
			Else
			{
				$radiobuttonFile.Checked = $False
				$ErrorMsgParams = @{
					FontFamily			      = 'Calibri'
					Title					  = "ERROR!"
					TitleBackground		      = "Firebrick"
					TitleTextForeground	      = "WhiteSmoke"
					TitleFontWeight		      = "UltraBold"
					TitleFontSize			  = 20
					Sound					  = 'Windows Exclamation'
				}
				New-WPFMessageBox @ErrorMsgParams -Content "No file has been selected! Please select a file to encrypt."
			}
		}
	}
}

$buttonDecrypt_Click = {
	$registryPath = 'HKCU:\Software\LBH Software, Inc.\Encryptor'
	$Name = "DecryptDirPath"
	$DecryptPath = (Get-ItemProperty -Path $registryPath).DecryptDirPath
	$NameFile = "DecryptFilePath"
	$DecryptFilePath = (Get-ItemProperty -Path $registryPath).DecryptFilePath
	If ((!($radioDirectoryDecrypt.Checked)) -and (!($radioFileDecrypt.Checked)))
	{
		$ErrorMsgParams = @{
			FontFamily			   = 'Calibri'
			Title				   = "ERROR!"
			TitleBackground	       = "Firebrick"
			TitleTextForeground    = "WhiteSmoke"
			TitleFontWeight	       = "UltraBold"
			TitleFontSize		   = 20
			Sound				   = 'Windows Exclamation'
		}
		New-WPFMessageBox @ErrorMsgParams -Content "Please select either a folder or directory to decrypt."
	}
	Else
	{
		If (!($textboxDecryptKey))
		{
			$InfoParams = @{
				FontFamily			      = 'Calibri'
				Title					  = "INFORMATION"
				TitleFontSize			  = 20
				TitleBackground		      = 'LightSkyBlue'
				TitleTextForeground	      = 'DarkSlateGray'
			}
			New-WPFMessageBox @InfoParams -Content "Please enter the decryption key"
		}
		Else
		{
			If ($radioDirectoryDecrypt.Checked -eq $True)
			{
				If ($DecryptPath -ne $Null)
				{
					Try
					{
						$DecryptDir = $DecryptPath
						$Key = $textboxDecryptKey.text
						
						$Files = (Get-ChildItem $DecryptDir -Recurse).VersionInfo.FileName
						ForEach ($File in $Files)
						{
							Unprotect-File -FileName $File -Key $Key
							Remove-Item $File -Confirm:$False -Force
							Remove-ItemProperty -Path $registryPath -Name $Name -Force -ErrorAction SilentlyContinue
							
						}
						$InfoParams = @{
							FontFamily				   = 'Calibri'
							Title					   = "INFORMATION"
							TitleFontSize			   = 20
							TitleBackground		       = 'LightSkyBlue'
							TitleTextForeground	       = 'DarkSlateGray'
						}
						New-WPFMessageBox @InfoParams -Content "Sucessfully decrypted $DecryptDir"
					}
					Catch
					{
						[System.Windows.Forms.MessageBox]::Show("$_", "Error")
					}
				}
				Else
				{
					$radioDirectoryDecrypt.Checked = $False
					$ErrorMsgParams = @{
						FontFamily			      = 'Calibri'
						Title					  = "ERROR!"
						TitleBackground		      = "Firebrick"
						TitleTextForeground	      = "WhiteSmoke"
						TitleFontWeight		      = "UltraBold"
						TitleFontSize			  = 20
						Sound					  = 'Windows Exclamation'
					}
					New-WPFMessageBox @ErrorMsgParams -Content "No directory has been selected! Please select a directory to decrypt."
				}
			}
			Elseif ($radioFileDecrypt.Checked -eq $True)
			{
				If ($DecryptFilePath -ne $Null)
				{
					Try
					{
						$Key = $textboxDecryptKey.text
						$File = $DecryptFilePath
						
						Unprotect-File -FileName $File -Key $Key
						Remove-Item $File -Confirm:$False -Force
						Remove-ItemProperty -Path $registryPath -Name $NameFile -Force -ErrorAction SilentlyContinue
						
						$InfoParams = @{
							FontFamily				    = 'Calibri'
							Title					    = "INFORMATION"
							TitleFontSize			    = 20
							TitleBackground			    = 'LightSkyBlue'
							TitleTextForeground		    = 'DarkSlateGray'
						}
						New-WPFMessageBox @InfoParams -Content "Sucessfully decrypted $DecryptFilePath"
					}
					Catch
					{
						[System.Windows.Forms.MessageBox]::Show("$_", "Error")
					}
				}
				Else
				{
					$radioDirectoryDecrypt.Checked = $False
					$ErrorMsgParams = @{
						FontFamily				   = 'Calibri'
						Title					   = "ERROR!"
						TitleBackground		       = "Firebrick"
						TitleTextForeground	       = "WhiteSmoke"
						TitleFontWeight		       = "UltraBold"
						TitleFontSize			   = 20
						Sound					   = 'Windows Exclamation'
					}
					New-WPFMessageBox @ErrorMsgParams -Content "No file has been selected! Please select a file to decrypt."
				}
			}
		}
		
	}
}




$radiobuttonFile_CheckedChanged={
	If ($radiobuttonFile.Checked -eq $True)
	{
		$savedialog = New-Object windows.forms.openfiledialog
		$savedialog.initialDirectory = [System.IO.Directory]::GetCurrentDirectory()
		$savedialog.title = "Encrypt File"
		$savedialog.ShowHelp = $True
		$resultfile = $savedialog.ShowDialog()
		$EncryptedFile = $savedialog.FileName
		$textboxPATH.Text = $EncryptedFile
		}
	
}

$radiobuttonDirectory_CheckedChanged={
	If ($radiobuttonDirectory.Checked -eq $True)
	{
		$savedialog = New-Object windows.forms.FolderBrowserDialog
		$savedialog.Description = "Please select a directory to encrypt"
		$resultDir = $savedialog.ShowDialog()
		$EncryptedDir = $savedialog.SelectedPath
		$textboxPATH.Text = $EncryptedDir 
	}
	
}

$radioDirectoryDecrypt_CheckedChanged={
	If ($radioDirectoryDecrypt.Checked -eq $True)
	{
		$savedialog = New-Object windows.forms.FolderBrowserDialog
		$savedialog.Description = "Please select a directory to decrypt"
		$resultDir = $savedialog.ShowDialog()
		$DecryptedDir = $savedialog.SelectedPath
		$registryPath = 'HKCU:\Software\LBH Software, Inc.\Encryptor'
		$Name = "DecryptDirPath"
		$value = $savedialog.SelectedPath 
		New-ItemProperty -Path $registryPath -Name $name -Value $value -PropertyType String -Force | Out-Null
	}
}

$radioFileDecrypt_CheckedChanged={
	If ($radioFileDecrypt.Checked -eq $True)
	{
		$savedialog = New-Object windows.forms.openfiledialog
		$savedialog.initialDirectory = [System.IO.Directory]::GetCurrentDirectory()
		$savedialog.title = "Encrypt File"
		$savedialog.ShowHelp = $True
		$resultfile = $savedialog.ShowDialog()
		$registryPath = 'HKCU:\Software\LBH Software, Inc.\Encryptor'
		$Name = "DecryptFilePath"
		$value = $savedialog.FileName
		New-ItemProperty -Path $registryPath -Name $name -Value $value -PropertyType String -Force | Out-Null
		
	}
	
}

$clearEncryptionKeyToolStripMenuItem_Click = {
	$textboxKEY.Enabled = $False
	$textboxKEY.Text = ""
	
}

$clearEncryptionPathToolStripMenuItem_Click={
	$textboxPATH.Text = ""
	
}

$deSelectDecryptionRadioButtonsToolStripMenuItem_Click={
	$radioDirectoryDecrypt.Checked = $False
	$radioFileDecrypt.Checked = $False
}

$deSelectEncryptionRadioButtonsToolStripMenuItem_Click={
	$radiobuttonDirectory.Checked = $False
	$radiobuttonFile.Checked = $False
	
}

$exitToolStripMenuItem_Click={
	$formEncryptor.Close()
	
}

$aboutToolStripMenuItem1_Click={
	$Params = @{
		FontFamily			   = 'Calibri'
		Title				   = "About"
		TitleFontSize		   = 20
		TitleTextForeground    = 'DarkSlateGray'
		TitleBackground	       = 'LightSkyBlue'
		ButtonType			   = 'OK'
		ContentFontSize	       = 16
		ContentTextForeground  = 'DarkSlateGray'
		ContentBackground	   = 'White'
		ButtonTextForeground   = 'DarkSlateGray'
		BorderThickness	       = 0
	}
	New-WPFMessageBox @Params -Content "Version: 1.0.0                                                                                                                         
Build Date: 9/17/2017                                                                                                                         
Encryption: AES-256                                                                                                                         
Encryption Module Author: Tyler Siegrist                                                                                                                          
Created By: Bradley Wyatt"
	
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies>
    <Assembly>mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
  </Assemblies>
</File>